<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-24T15:39:19 CDT" name="Suite" finished-at="2024-09-24T15:39:38 CDT" duration-ms="18629">
    <groups>
      <group name="smoke">
        <method signature="TestClassA.testA(java.lang.String,java.lang.String)[pri:0, instance:suiteA.TestClassA@59662a0b]" name="testA" class="suiteA.TestClassA"/>
        <method signature="TestClassB.testB(java.lang.String,java.lang.String)[pri:0, instance:suiteB.TestClassB@52bf72b5]" name="testB" class="suiteB.TestClassB"/>
        <method signature="TestClassC.testC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassC@67c27493]" name="testC" class="suiteC.TestClassC"/>
        <method signature="TestClassCC.testCC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" name="testCC" class="suiteC.TestClassCC"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="TestClassCC.testCC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" name="testCC" class="suiteC.TestClassCC"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2024-09-24T15:39:19 CDT" name="Test" finished-at="2024-09-24T15:39:38 CDT" duration-ms="18629">
      <class name="suiteA.TestClassA">
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteA.TestClassA@59662a0b]" started-at="2024-09-24T15:39:32 CDT" name="init" finished-at="2024-09-24T15:39:32 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassA.testA(java.lang.String,java.lang.String)[pri:0, instance:suiteA.TestClassA@59662a0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testA(java.lang.String,java.lang.String)[pri:0, instance:suiteA.TestClassA@59662a0b]" started-at="2024-09-24T15:39:32 CDT" name="testA" data-provider="dataProviderSuiteA" finished-at="2024-09-24T15:39:32 CDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName 1A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 1A]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Username [UserName 1A] did not match [USERNAME_DEMO]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Username [UserName 1A] did not match [USERNAME_DEMO]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at testBase.TestBase.failAndStop(TestBase.java:59)
at suiteA.TestClassA.testA(TestClassA.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteA.TestClassA@59662a0b]" started-at="2024-09-24T15:39:32 CDT" name="quit" finished-at="2024-09-24T15:39:32 CDT" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method signature="testA(java.lang.String,java.lang.String)[pri:0, instance:suiteA.TestClassA@59662a0b]" started-at="2024-09-24T15:39:32 CDT" name="testA" data-provider="dataProviderSuiteA" finished-at="2024-09-24T15:39:32 CDT" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username 2A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 2A]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Username [Username 2A] did not match [USERNAME_DEMO]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Username [Username 2A] did not match [USERNAME_DEMO]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at testBase.TestBase.failAndStop(TestBase.java:59)
at suiteA.TestClassA.testA(TestClassA.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteA.TestClassA@59662a0b]" started-at="2024-09-24T15:39:32 CDT" name="init" finished-at="2024-09-24T15:39:32 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassA.testA(java.lang.String,java.lang.String)[pri:0, instance:suiteA.TestClassA@59662a0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteA.TestClassA@59662a0b]" started-at="2024-09-24T15:39:32 CDT" name="quit" finished-at="2024-09-24T15:39:32 CDT" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteA.TestClassA -->
      <class name="suiteB.TestClassB">
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteB.TestClassB@52bf72b5]" started-at="2024-09-24T15:39:19 CDT" name="init" finished-at="2024-09-24T15:39:19 CDT" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassB.testB(java.lang.String,java.lang.String)[pri:0, instance:suiteB.TestClassB@52bf72b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testB(java.lang.String,java.lang.String)[pri:0, instance:suiteB.TestClassB@52bf72b5]" started-at="2024-09-24T15:39:19 CDT" name="testB" data-provider="dataProviderSuiteB" finished-at="2024-09-24T15:39:22 CDT" duration-ms="3012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName 1B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 1B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteB.TestClassB@52bf72b5]" started-at="2024-09-24T15:39:22 CDT" name="quit" finished-at="2024-09-24T15:39:22 CDT" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteB.TestClassB@52bf72b5]" started-at="2024-09-24T15:39:22 CDT" name="init" finished-at="2024-09-24T15:39:22 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassB.testB(java.lang.String,java.lang.String)[pri:0, instance:suiteB.TestClassB@52bf72b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testB(java.lang.String,java.lang.String)[pri:0, instance:suiteB.TestClassB@52bf72b5]" started-at="2024-09-24T15:39:22 CDT" name="testB" data-provider="dataProviderSuiteB" finished-at="2024-09-24T15:39:26 CDT" duration-ms="3004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username 2B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 2B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteB.TestClassB@52bf72b5]" started-at="2024-09-24T15:39:26 CDT" name="quit" finished-at="2024-09-24T15:39:26 CDT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteB.TestClassB -->
      <class name="suiteC.TestClassCC">
        <test-method signature="testCC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" started-at="2024-09-24T15:39:26 CDT" name="testCC" data-provider="dataProviderSuiteC" finished-at="2024-09-24T15:39:29 CDT" duration-ms="3004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName 1CC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 1CC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" started-at="2024-09-24T15:39:26 CDT" name="init" finished-at="2024-09-24T15:39:26 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassCC.testCC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassCC@1b7cc17c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" started-at="2024-09-24T15:39:29 CDT" name="quit" finished-at="2024-09-24T15:39:29 CDT" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" started-at="2024-09-24T15:39:29 CDT" name="init" finished-at="2024-09-24T15:39:29 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassCC.testCC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassCC@1b7cc17c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" started-at="2024-09-24T15:39:29 CDT" name="testCC" data-provider="dataProviderSuiteC" finished-at="2024-09-24T15:39:32 CDT" duration-ms="3006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username 2CC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 2CC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteC.TestClassCC@1b7cc17c]" started-at="2024-09-24T15:39:32 CDT" name="quit" finished-at="2024-09-24T15:39:32 CDT" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteC.TestClassCC -->
      <class name="suiteC.TestClassC">
        <test-method signature="testC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassC@67c27493]" started-at="2024-09-24T15:39:32 CDT" name="testC" data-provider="dataProviderSuiteC" finished-at="2024-09-24T15:39:35 CDT" duration-ms="3006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName 1C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 1C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteC.TestClassC@67c27493]" started-at="2024-09-24T15:39:32 CDT" name="init" finished-at="2024-09-24T15:39:32 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassC.testC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassC@67c27493] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteC.TestClassC@67c27493]" started-at="2024-09-24T15:39:35 CDT" name="quit" finished-at="2024-09-24T15:39:35 CDT" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method signature="testC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassC@67c27493]" started-at="2024-09-24T15:39:35 CDT" name="testC" data-provider="dataProviderSuiteC" finished-at="2024-09-24T15:39:38 CDT" duration-ms="3005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username 2C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password 2C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method is-config="true" signature="init(org.testng.ITestResult)[pri:0, instance:suiteC.TestClassC@67c27493]" started-at="2024-09-24T15:39:35 CDT" name="init" finished-at="2024-09-24T15:39:35 CDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestClassC.testC(java.lang.String,java.lang.String)[pri:0, instance:suiteC.TestClassC@67c27493] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteC.TestClassC@67c27493]" started-at="2024-09-24T15:39:38 CDT" name="quit" finished-at="2024-09-24T15:39:38 CDT" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteC.TestClassC -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
